---
# file: roles/ansible-role-minc_toolkit/tasks/main.yml

## update apt cache
#
# We keep this even if it is not used in order to test sudo

- name: "update apt cache"
  become: true
  apt:
    update_cache: yes
    cache_valid_time: 3600
  tags: [ 'packages' ]

## install utilities

- name: "Utilities - ensure for `curl`"
  become: true
  apt:
    name: '{{ item }}'
    state: '{{ minc_state }}'
  with_items:
    - wget
  when: minc_state == 'present'
  tags: [ 'packages', 'utilities' ]

# minc_ver != 1.0.01

## Gather minc-toolkit resources on remote system

- name: "Download latest stable version of minc toolkit (for ubuntu 12.04) from Github"
  get_url:
    url: '{{ minc_github_stable_ubuntu_package_url }}'
    dest: '{{ minc_local_ubuntu_resource_path }}'
  when: minc_ver != '1.0.01' and minc_state == 'present'
  tags: [ 'packages', 'minc' ]

- name: "Install the lastest version of minc toolkit (for Ubuntu 12.04) available on Github"
  become: true
  apt:
    deb: '{{ minc_local_ubuntu_resource_path }}'
    state: 'present'
  when: minc_ver != '1.0.01' and minc_state == 'present'
  tags: [ 'packages', 'minc' ]

# minc_ver == 1.0.01

- name: "Download latest stable version of minc toolkit (for ubuntu 12.04) from Github"
  get_url:
    url: '{{ minc_github_stable_debian_package_url }}'
    dest: '{{ minc_local_debian_resource_path }}'
  when: minc_ver == '1.0.01' and minc_state == 'present'
  tags: [ 'packages', 'minc' ]

- name: "Install the lastest version of minc toolkit (for Ubuntu 12.04) available on Github"
  become: true
  apt:
    deb: '{{ minc_local_debian_resource_path }}'
    state: 'present'
  when: minc_ver == '1.0.01' and minc_state == 'present'
  tags: [ 'packages', 'minc' ]

# any minc version

- name: create versioned minc
  become: true
  command: cp -r /opt/minc /opt/minc-'{{ minc_ver }}' chdir=/ creates=/opt/minc-'{{ minc_ver }}'/bin/mincinfo
  when: minc_state == 'present'

## removals

- name: "remove minc minc-toolkit"
  become: true
  command: dpkg --remove minc-toolkit
  when: minc_state == 'absent' or minc_state == 'purge'
  ignore_errors: yes

- name: "remove /opt/minc"
  become: true
  command: rm -R /opt/minc
  when: minc_state == 'absent' or minc_state == 'purge'
  ignore_errors: yes

- name: "remove /opt/minc/'{{ minc_ver }}'"
  become: true
  command: rm -R /opt/minc-'{{ minc_ver }}'
  when: minc_state == 'absent' or minc_state == 'purge'
  ignore_errors: yes

# path - Before 2.3 this option was only usable as dest, destfile and name.

- name: remove file name in users bash_aliases
  blockinfile:
    dest  : "/etc/skel/.bash_aliases"
    marker: "## {mark} ANSIBLE MANAGED BLOCK for $HOME/.bash_aliases"
  when: minc_state == 'absent' or minc_state == 'purge'
  ignore_errors: yes

- name: "remove aliase entry for minc-toolkit-1.0.88"
  blockinfile:
    dest  : "/etc/skel/.bash_aliases"
    marker: '## {mark} ANSIBLE MANAGED BLOCK for MINC TOOLKIT ALIAS source_minc-toolkit-1.0.88'
  when: minc_state == 'absent' or minc_state == 'purge'

#  minc-toolkit-config-1.0.08.sh

- name: "remove /etc/skel/bin/minc-toolkit-config-1.0.08.sh"
  become: true
  command: rm -R /etc/skel/bin/minc-toolkit-config-1.0.08.sh
  when: minc_state == 'absent' or minc_state == 'purge'
  ignore_errors: yes

#  minc-toolkit-config-1.0.08.sh

- name: "remove /etc/skel/bin/minc-toolkit-config.sh"
  become: true
  command: rm -R /etc/skel/bin/minc-toolkit-config.sh
  when: minc_state == 'absent' or minc_state == 'purge'
  ignore_errors: yes

# User configuration

## We ensure for the creation of the directory /etc/skel/bin
#
# done via dependancy in meta/main.yml

## Ensure for executable ~/bin/minc-toolkit-config.sh
#
# done via dependancy in meta/main.yml

## Ensure for versioned executable ~/bin/minc-toolkit-config.sh
#
# done via dependancy in meta/main.yml

 
